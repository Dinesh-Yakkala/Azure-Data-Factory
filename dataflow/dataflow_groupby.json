{
	"name": "dataflow_groupby",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_inbound_emp",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_outbound",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          empname as string,",
				"          gender as string,",
				"          deptno as string,",
				"          sal as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"select1 cast(output(",
				"          sal as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 aggregate(groupBy(deptno),",
				"     totalsalary = sum(sal)) ~> aggregate1",
				"aggregate1 filter(totalsalary>125000) ~> filter1",
				"source1 select(mapColumn(",
				"          empid,",
				"          empname,",
				"          gender,",
				"          sal,",
				"          deptno",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {this is a products.csv file} as string",
				"     ),",
				"     partitionFileNames:['grouby.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}